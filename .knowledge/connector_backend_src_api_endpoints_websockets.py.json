{"is_source_file": true, "format": "Python", "description": "This file defines a WebSocket API endpoint using FastAPI, including connection management, authentication, message handling, and broadcast capabilities for real-time communication in a multi-tenant environment.", "external_files": ["src/models/schemas.py", "src/core/database.py", "src/core/security.py", "src/core/exceptions.py", "loguru.py", "fastapi", "typing"], "external_methods": ["token_manager.verify_token", "get_database", "WebSocket.accept", "WebSocket.close", "WebSocket.receive_text", "WebSocket.send_text", "logger.info", "logger.error"], "published": ["websocket_endpoint", "broadcast_message", "get_connection_status", "send_workflow_update", "send_connector_update", "send_system_notification"], "classes": [{"name": "ConnectionManager", "description": "Manages active WebSocket connections, tenant-specific connections, connection information, message sending, and disconnections."}], "methods": [{"name": "connect(self, websocket: WebSocket, connection_id: str, tenant_id: str, user_id: Optional[str] = None)", "description": "Accepts a new WebSocket connection, registers it under the specified connection and tenant IDs, and logs the event.", "scope": "ConnectionManager", "scopeKind": "class"}, {"name": "disconnect(self, connection_id: str)", "description": "Removes a WebSocket connection from management and cleans up connection info and tenant listings.", "scope": "ConnectionManager", "scopeKind": "class"}, {"name": "send_personal_message(self, message: str, connection_id: str)", "description": "Sends a text message to a specific WebSocket connection, handling failures.", "scope": "ConnectionManager", "scopeKind": "class"}, {"name": "send_tenant_message(self, message: str, tenant_id: str)", "description": "Broadcasts a message to all connections associated with a tenant, cleaning up any failed connections.", "scope": "ConnectionManager", "scopeKind": "class"}, {"name": "broadcast(self, message: str)", "description": "Sends a message to all active WebSocket connections.", "scope": "ConnectionManager", "scopeKind": "class"}, {"name": "List[str] get_tenant_connections(self, tenant_id: str)", "description": "Returns a list of connection IDs for a given tenant.", "scope": "ConnectionManager", "scopeKind": "class"}, {"name": "int get_connection_count(self)", "description": "Returns total number of active WebSocket connections.", "scope": "ConnectionManager", "scopeKind": "class"}, {"name": "__init__(self)", "scope": "ConnectionManager", "scopeKind": "class", "description": "unavailable"}, {"name": "Dict[str,Any] authenticate_websocket(token: str)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "broadcast_message( message_type: str, data: Dict[str, Any], tenant_id: Optional[str] = None )", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "get_connection_status()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "None handle_websocket_message( connection_id: str, tenant_id: str, user_id: Optional[str], message_data: Dict[str, Any], db )", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "send_connector_update(tenant_id: str, connector_id: str, status: str, data: Dict[str, Any])", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "send_system_notification(tenant_id: str, notification_type: str, title: str, message: str)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "send_workflow_update(tenant_id: str, workflow_id: str, status: str, data: Dict[str, Any])", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "websocket_endpoint( websocket: WebSocket, token: str, db = Depends(get_database) )", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["websocket.accept()", "websocket.close()", "websocket.receive_text()", "websocket.send_text()", "token_manager.verify_token()", "manager.connect()", "manager.disconnect()", "manager.send_personal_message()", "manager.send_tenant_message()", "manager.broadcast()"], "search-terms": ["WebSocket connection handler", "FastAPI websocket endpoint", "multi-tenant WebSocket server", "connection manager", "JWT WebSocket auth", "broadcast WebSocket message", "tenant-based message routing"], "state": 2, "file_id": 21, "knowledge_revision": 57, "git_revision": "", "revision_history": [{"52": ""}, {"57": ""}], "ctags": [{"_type": "tag", "name": "ConnectionManager", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/api/endpoints/websockets.py", "pattern": "/^class ConnectionManager:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/api/endpoints/websockets.py", "pattern": "/^    def __init__(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "ConnectionManager", "scopeKind": "class"}, {"_type": "tag", "name": "authenticate_websocket", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/api/endpoints/websockets.py", "pattern": "/^async def authenticate_websocket(token: str) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "(token: str)"}, {"_type": "tag", "name": "broadcast", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/api/endpoints/websockets.py", "pattern": "/^    async def broadcast(self, message: str):$/", "language": "Python", "kind": "member", "signature": "(self, message: str)", "scope": "ConnectionManager", "scopeKind": "class"}, {"_type": "tag", "name": "broadcast_message", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/api/endpoints/websockets.py", "pattern": "/^async def broadcast_message($/", "language": "Python", "kind": "function", "signature": "( message_type: str, data: Dict[str, Any], tenant_id: Optional[str] = None )"}, {"_type": "tag", "name": "connect", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/api/endpoints/websockets.py", "pattern": "/^    async def connect(self, websocket: WebSocket, connection_id: str, tenant_id: str, user_id: O/", "language": "Python", "kind": "member", "signature": "(self, websocket: WebSocket, connection_id: str, tenant_id: str, user_id: Optional[str] = None)", "scope": "ConnectionManager", "scopeKind": "class"}, {"_type": "tag", "name": "disconnect", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/api/endpoints/websockets.py", "pattern": "/^    def disconnect(self, connection_id: str):$/", "language": "Python", "kind": "member", "signature": "(self, connection_id: str)", "scope": "ConnectionManager", "scopeKind": "class"}, {"_type": "tag", "name": "get_connection_count", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/api/endpoints/websockets.py", "pattern": "/^    def get_connection_count(self) -> int:$/", "language": "Python", "typeref": "typename:int", "kind": "member", "signature": "(self)", "scope": "ConnectionManager", "scopeKind": "class"}, {"_type": "tag", "name": "get_connection_status", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/api/endpoints/websockets.py", "pattern": "/^async def get_connection_status():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_tenant_connections", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/api/endpoints/websockets.py", "pattern": "/^    def get_tenant_connections(self, tenant_id: str) -> List[str]:$/", "language": "Python", "typeref": "typename:List[str]", "kind": "member", "signature": "(self, tenant_id: str)", "scope": "ConnectionManager", "scopeKind": "class"}, {"_type": "tag", "name": "handle_websocket_message", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/api/endpoints/websockets.py", "pattern": "/^async def handle_websocket_message($/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "( connection_id: str, tenant_id: str, user_id: Optional[str], message_data: Dict[str, Any], db )"}, {"_type": "tag", "name": "manager", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/api/endpoints/websockets.py", "pattern": "/^manager = ConnectionManager()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/api/endpoints/websockets.py", "pattern": "/^router = APIRouter()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "send_connector_update", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/api/endpoints/websockets.py", "pattern": "/^async def send_connector_update(tenant_id: str, connector_id: str, status: str, data: Dict[str, /", "language": "Python", "kind": "function", "signature": "(tenant_id: str, connector_id: str, status: str, data: Dict[str, Any])"}, {"_type": "tag", "name": "send_personal_message", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/api/endpoints/websockets.py", "pattern": "/^    async def send_personal_message(self, message: str, connection_id: str):$/", "language": "Python", "kind": "member", "signature": "(self, message: str, connection_id: str)", "scope": "ConnectionManager", "scopeKind": "class"}, {"_type": "tag", "name": "send_system_notification", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/api/endpoints/websockets.py", "pattern": "/^async def send_system_notification(tenant_id: str, notification_type: str, title: str, message: /", "language": "Python", "kind": "function", "signature": "(tenant_id: str, notification_type: str, title: str, message: str)"}, {"_type": "tag", "name": "send_tenant_message", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/api/endpoints/websockets.py", "pattern": "/^    async def send_tenant_message(self, message: str, tenant_id: str):$/", "language": "Python", "kind": "member", "signature": "(self, message: str, tenant_id: str)", "scope": "ConnectionManager", "scopeKind": "class"}, {"_type": "tag", "name": "send_workflow_update", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/api/endpoints/websockets.py", "pattern": "/^async def send_workflow_update(tenant_id: str, workflow_id: str, status: str, data: Dict[str, An/", "language": "Python", "kind": "function", "signature": "(tenant_id: str, workflow_id: str, status: str, data: Dict[str, Any])"}, {"_type": "tag", "name": "websocket_endpoint", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/api/endpoints/websockets.py", "pattern": "/^async def websocket_endpoint($/", "language": "Python", "kind": "function", "signature": "( websocket: WebSocket, token: str, db = Depends(get_database) )"}], "hash": "1dc9dfce7ef9ffba791388f97f1ffa92", "format-version": 4, "code-base-name": "connector_backend", "filename": "connector_backend/src/api/endpoints/websockets.py", "fields": [{"name": "manager = ConnectionManager()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "router = APIRouter()", "scope": "", "scopeKind": "", "description": "unavailable"}]}