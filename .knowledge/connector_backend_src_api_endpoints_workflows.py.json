{"is_source_file": true, "format": "Python", "description": "This file defines REST API endpoints for managing workflows in a FastAPI application. It includes functions for listing, creating, retrieving, updating, deleting, executing, activating, and deactivating workflows. It also contains internal validation logic for workflow steps. The code interacts with a MongoDB database, handling workflow data, and references external modules for security, database access, and connectors.", "external_files": ["src.models.schemas", "src.core.database", "src.core.security", "src.core.exceptions", "src.connectors.registry"], "external_methods": ["get_current_user", "get_database", "cursor.find", "logger.error", "raise ValidationException", "raise HTTPException", "connector_registry.is_registered"], "published": ["list_workflows", "create_workflow", "get_workflow", "update_workflow", "delete_workflow", "execute_workflow", "activate_workflow", "deactivate_workflow"], "classes": [], "methods": [{"name": "None _validate_workflow_steps(steps: List[Any], tenant_id: str, db)", "description": "Internal helper to validate each step of the workflow, checking connector registration, configuration, and connection status.", "scope": "", "scopeKind": ""}, {"name": "activate_workflow( workflow_id: str, current_user: Dict[str, Any] = Depends(get_current_user), db = Depends(get_database) )", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "create_workflow( workflow_data: WorkflowCreate, current_user: Dict[str, Any] = Depends(get_current_user), db = Depends(get_database) )", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "deactivate_workflow( workflow_id: str, current_user: Dict[str, Any] = Depends(get_current_user), db = Depends(get_database) )", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "delete_workflow( workflow_id: str, current_user: Dict[str, Any] = Depends(get_current_user), db = Depends(get_database) )", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "execute_workflow( workflow_id: str, variables: Optional[Dict[str, Any]] = None, current_user: Dict[str, Any] = Depends(get_current_user), db = Depends(get_database) )", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "get_workflow( workflow_id: str, current_user: Dict[str, Any] = Depends(get_current_user), db = Depends(get_database) )", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "list_workflows( status_filter: Optional[WorkflowStatus] = Query(None, description=\"Filter by workflow status\"), page: int = Query(1, ge=1, description=\"Page number\"), per_page: int = Query(20, ge=1, le=100, description=\"Results per page\"), current_user: Dict[str, Any] = Depends(get_current_user), db = Depends(get_database) )", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "update_workflow( workflow_id: str, update_data: WorkflowUpdate, current_user: Dict[str, Any] = Depends(get_current_user), db = Depends(get_database) )", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["db.workflows.find", "db.workflows.insert_one", "db.workflows.find_one", "db.workflows.update_one", "db.workflows.delete_one", "db.workflow_executions.insert_one", "db.connectors.find_one", "connector_registry.is_registered", "logger.error", "raise ValidationException", "raise HTTPException"], "search-terms": ["FastAPI workflows endpoints", "MongoDB workflow management", "workflow execution API", "workflow step validation", "connector registration check"], "state": 2, "file_id": 18, "knowledge_revision": 41, "git_revision": "", "ctags": [{"_type": "tag", "name": "_validate_workflow_steps", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/api/endpoints/workflows.py", "pattern": "/^async def _validate_workflow_steps(steps: List[Any], tenant_id: str, db) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "(steps: List[Any], tenant_id: str, db)"}, {"_type": "tag", "name": "activate_workflow", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/api/endpoints/workflows.py", "pattern": "/^async def activate_workflow($/", "language": "Python", "kind": "function", "signature": "( workflow_id: str, current_user: Dict[str, Any] = Depends(get_current_user), db = Depends(get_database) )"}, {"_type": "tag", "name": "create_workflow", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/api/endpoints/workflows.py", "pattern": "/^async def create_workflow($/", "language": "Python", "kind": "function", "signature": "( workflow_data: WorkflowCreate, current_user: Dict[str, Any] = Depends(get_current_user), db = Depends(get_database) )"}, {"_type": "tag", "name": "deactivate_workflow", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/api/endpoints/workflows.py", "pattern": "/^async def deactivate_workflow($/", "language": "Python", "kind": "function", "signature": "( workflow_id: str, current_user: Dict[str, Any] = Depends(get_current_user), db = Depends(get_database) )"}, {"_type": "tag", "name": "delete_workflow", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/api/endpoints/workflows.py", "pattern": "/^async def delete_workflow($/", "language": "Python", "kind": "function", "signature": "( workflow_id: str, current_user: Dict[str, Any] = Depends(get_current_user), db = Depends(get_database) )"}, {"_type": "tag", "name": "execute_workflow", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/api/endpoints/workflows.py", "pattern": "/^async def execute_workflow($/", "language": "Python", "kind": "function", "signature": "( workflow_id: str, variables: Optional[Dict[str, Any]] = None, current_user: Dict[str, Any] = Depends(get_current_user), db = Depends(get_database) )"}, {"_type": "tag", "name": "get_workflow", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/api/endpoints/workflows.py", "pattern": "/^async def get_workflow($/", "language": "Python", "kind": "function", "signature": "( workflow_id: str, current_user: Dict[str, Any] = Depends(get_current_user), db = Depends(get_database) )"}, {"_type": "tag", "name": "list_workflows", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/api/endpoints/workflows.py", "pattern": "/^async def list_workflows($/", "language": "Python", "kind": "function", "signature": "( status_filter: Optional[WorkflowStatus] = Query(None, description=\"Filter by workflow status\"), page: int = Query(1, ge=1, description=\"Page number\"), per_page: int = Query(20, ge=1, le=100, description=\"Results per page\"), current_user: Dict[str, Any] = Depends(get_current_user), db = Depends(get_database) )"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/api/endpoints/workflows.py", "pattern": "/^router = APIRouter()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "update_workflow", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/api/endpoints/workflows.py", "pattern": "/^async def update_workflow($/", "language": "Python", "kind": "function", "signature": "( workflow_id: str, update_data: WorkflowUpdate, current_user: Dict[str, Any] = Depends(get_current_user), db = Depends(get_database) )"}], "hash": "14ec75306c69e7f857ac33302f2390a3", "format-version": 4, "code-base-name": "connector_backend", "filename": "connector_backend/src/api/endpoints/workflows.py", "fields": [{"name": "router = APIRouter()", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"41": ""}]}