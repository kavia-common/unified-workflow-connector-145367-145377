{"is_source_file": true, "format": "Python", "description": "This file defines an abstract base class 'BaseConnector' for creating various connector implementations within a software project. It specifies the interface methods that all concrete connector classes must implement, including methods for OAuth authorization, token exchange, resource management, and webhook handling. The class also includes support attributes and utility methods common across connectors.", "external_files": ["src.models.schemas"], "external_methods": ["AuthType.OAUTH2", "ResourceType"], "published": ["BaseConnector"], "classes": [{"name": "BaseConnector", "description": "An abstract base class for all connector implementations defining the required interface and supporting utility methods."}], "methods": [{"name": "str get_oauth_authorize_url( self, tenant_id: str, state: str, redirect_uri: str )", "description": "Abstract method to generate OAuth authorization URL for the connector.", "scope": "BaseConnector", "scopeKind": "class"}, {"name": "Dict[str,Any] exchange_code_for_tokens( self, tenant_id: str, code: str, state: str, redirect_uri: str )", "description": "Abstract method to exchange OAuth authorization code for access and refresh tokens.", "scope": "BaseConnector", "scopeKind": "class"}, {"name": "Dict[str,Any] refresh_access_token( self, tenant_id: str, refresh_token: str )", "description": "Abstract method to refresh the access token using a refresh token.", "scope": "BaseConnector", "scopeKind": "class"}, {"name": "bool validate_credentials(self, credentials: Dict[str, Any])", "description": "Abstract method to validate provided authentication credentials.", "scope": "BaseConnector", "scopeKind": "class"}, {"name": "Tuple[List[SearchResult],int] search( self, credentials: Dict[str, Any], query: str, resource_type: Optional[ResourceType] = None, filters: Optional[Dict[str, Any]] = None, page: int = 1, per_page: int = 20 )", "description": "Abstract method to search for resources with given query and filters.", "scope": "BaseConnector", "scopeKind": "class"}, {"name": "Optional[Dict[str,Any]] get_resource( self, credentials: Dict[str, Any], resource_type: ResourceType, resource_id: str )", "description": "Abstract method to retrieve a specific resource by its ID.", "scope": "BaseConnector", "scopeKind": "class"}, {"name": "Dict[str,Any] create_resource( self, credentials: Dict[str, Any], resource_type: ResourceType, data: Dict[str, Any] )", "description": "Abstract method to create a new resource.", "scope": "BaseConnector", "scopeKind": "class"}, {"name": "Dict[str,Any] update_resource( self, credentials: Dict[str, Any], resource_type: ResourceType, resource_id: str, data: Dict[str, Any] )", "description": "Method to update an existing resource; not supported by default.", "scope": "BaseConnector", "scopeKind": "class"}, {"name": "bool delete_resource( self, credentials: Dict[str, Any], resource_type: ResourceType, resource_id: str )", "description": "Method to delete a resource; not supported by default.", "scope": "BaseConnector", "scopeKind": "class"}, {"name": "Dict[str,Any] get_resource_schema(self, resource_type: ResourceType)", "description": "Method to retrieve JSON schema for a specific resource type.", "scope": "BaseConnector", "scopeKind": "class"}, {"name": "Tuple[List[Dict[str,Any]],int] list_resources( self, credentials: Dict[str, Any], resource_type: ResourceType, filters: Optional[Dict[str, Any]] = None, page: int = 1, per_page: int = 20 )", "description": "Method to list resources, defaulting to performing a search with empty query.", "scope": "BaseConnector", "scopeKind": "class"}, {"name": "Dict[str,Any] setup_webhook( self, credentials: Dict[str, Any], webhook_url: str, events: List[str] )", "description": "Method to set up webhook subscriptions; raises NotImplementedError if not supported.", "scope": "BaseConnector", "scopeKind": "class"}, {"name": "Dict[str,Any] process_webhook( self, payload: Dict[str, Any], headers: Dict[str, str] )", "description": "Method to process incoming webhook payloads.", "scope": "BaseConnector", "scopeKind": "class"}, {"name": "ConnectorMetadata get_metadata(self)", "description": "Method to return connector metadata.", "scope": "BaseConnector", "scopeKind": "class"}, {"name": "Dict[str,Any] test_connection(self, credentials: Dict[str, Any])", "description": "Method to test the connection with provided credentials.", "scope": "BaseConnector", "scopeKind": "class"}, {"name": "__init__(self, config: ConnectorConfig)", "scope": "BaseConnector", "scopeKind": "class", "description": "unavailable"}], "calls": ["self.validate_credentials", "self.search"], "search-terms": ["abstract base class", "connector interface", "OAuth", "resource management", "webhook setup", "Python ABC", "connector configuration"], "state": 2, "file_id": 12, "knowledge_revision": 27, "git_revision": "", "ctags": [{"_type": "tag", "name": "BaseConnector", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/connectors/base.py", "pattern": "/^class BaseConnector(ABC):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/connectors/base.py", "pattern": "/^    def __init__(self, config: ConnectorConfig):$/", "language": "Python", "kind": "member", "signature": "(self, config: ConnectorConfig)", "scope": "BaseConnector", "scopeKind": "class"}, {"_type": "tag", "name": "create_resource", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/connectors/base.py", "pattern": "/^    async def create_resource($/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "( self, credentials: Dict[str, Any], resource_type: ResourceType, data: Dict[str, Any] )", "scope": "BaseConnector", "scopeKind": "class"}, {"_type": "tag", "name": "delete_resource", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/connectors/base.py", "pattern": "/^    async def delete_resource($/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "( self, credentials: Dict[str, Any], resource_type: ResourceType, resource_id: str )", "scope": "BaseConnector", "scopeKind": "class"}, {"_type": "tag", "name": "exchange_code_for_tokens", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/connectors/base.py", "pattern": "/^    async def exchange_code_for_tokens($/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "( self, tenant_id: str, code: str, state: str, redirect_uri: str )", "scope": "BaseConnector", "scopeKind": "class"}, {"_type": "tag", "name": "get_metadata", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/connectors/base.py", "pattern": "/^    def get_metadata(self) -> ConnectorMetadata:$/", "language": "Python", "typeref": "typename:ConnectorMetadata", "kind": "member", "signature": "(self)", "scope": "BaseConnector", "scopeKind": "class"}, {"_type": "tag", "name": "get_oauth_authorize_url", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/connectors/base.py", "pattern": "/^    async def get_oauth_authorize_url($/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "( self, tenant_id: str, state: str, redirect_uri: str )", "scope": "BaseConnector", "scopeKind": "class"}, {"_type": "tag", "name": "get_resource", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/connectors/base.py", "pattern": "/^    async def get_resource($/", "language": "Python", "typeref": "typename:Optional[Dict[str,Any]]", "kind": "member", "signature": "( self, credentials: Dict[str, Any], resource_type: ResourceType, resource_id: str )", "scope": "BaseConnector", "scopeKind": "class"}, {"_type": "tag", "name": "get_resource_schema", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/connectors/base.py", "pattern": "/^    async def get_resource_schema(self, resource_type: ResourceType) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, resource_type: ResourceType)", "scope": "BaseConnector", "scopeKind": "class"}, {"_type": "tag", "name": "list_resources", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/connectors/base.py", "pattern": "/^    async def list_resources($/", "language": "Python", "typeref": "typename:Tuple[List[Dict[str,Any]],int]", "kind": "member", "signature": "( self, credentials: Dict[str, Any], resource_type: ResourceType, filters: Optional[Dict[str, Any]] = None, page: int = 1, per_page: int = 20 )", "scope": "BaseConnector", "scopeKind": "class"}, {"_type": "tag", "name": "process_webhook", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/connectors/base.py", "pattern": "/^    async def process_webhook($/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "( self, payload: Dict[str, Any], headers: Dict[str, str] )", "scope": "BaseConnector", "scopeKind": "class"}, {"_type": "tag", "name": "refresh_access_token", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/connectors/base.py", "pattern": "/^    async def refresh_access_token($/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "( self, tenant_id: str, refresh_token: str )", "scope": "BaseConnector", "scopeKind": "class"}, {"_type": "tag", "name": "required_scopes", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/connectors/base.py", "pattern": "/^    required_scopes: List[str] = []$/", "language": "Python", "typeref": "typename:List[str]", "kind": "variable", "scope": "BaseConnector", "scopeKind": "class"}, {"_type": "tag", "name": "search", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/connectors/base.py", "pattern": "/^    async def search($/", "language": "Python", "typeref": "typename:Tuple[List[SearchResult],int]", "kind": "member", "signature": "( self, credentials: Dict[str, Any], query: str, resource_type: Optional[ResourceType] = None, filters: Optional[Dict[str, Any]] = None, page: int = 1, per_page: int = 20 )", "scope": "BaseConnector", "scopeKind": "class"}, {"_type": "tag", "name": "setup_webhook", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/connectors/base.py", "pattern": "/^    async def setup_webhook($/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "( self, credentials: Dict[str, Any], webhook_url: str, events: List[str] )", "scope": "BaseConnector", "scopeKind": "class"}, {"_type": "tag", "name": "supported_auth_types", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/connectors/base.py", "pattern": "/^    supported_auth_types: List[AuthType] = [AuthType.OAUTH2]$/", "language": "Python", "typeref": "typename:List[AuthType]", "kind": "variable", "scope": "BaseConnector", "scopeKind": "class"}, {"_type": "tag", "name": "supported_resources", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/connectors/base.py", "pattern": "/^    supported_resources: List[ResourceType] = []$/", "language": "Python", "typeref": "typename:List[ResourceType]", "kind": "variable", "scope": "BaseConnector", "scopeKind": "class"}, {"_type": "tag", "name": "supports_oauth", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/connectors/base.py", "pattern": "/^    supports_oauth: bool = True$/", "language": "Python", "typeref": "typename:bool", "kind": "variable", "scope": "BaseConnector", "scopeKind": "class"}, {"_type": "tag", "name": "supports_webhooks", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/connectors/base.py", "pattern": "/^    supports_webhooks: bool = False$/", "language": "Python", "typeref": "typename:bool", "kind": "variable", "scope": "BaseConnector", "scopeKind": "class"}, {"_type": "tag", "name": "test_connection", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/connectors/base.py", "pattern": "/^    async def test_connection(self, credentials: Dict[str, Any]) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, credentials: Dict[str, Any])", "scope": "BaseConnector", "scopeKind": "class"}, {"_type": "tag", "name": "update_resource", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/connectors/base.py", "pattern": "/^    async def update_resource($/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "( self, credentials: Dict[str, Any], resource_type: ResourceType, resource_id: str, data: Dict[str, Any] )", "scope": "BaseConnector", "scopeKind": "class"}, {"_type": "tag", "name": "validate_credentials", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/connectors/base.py", "pattern": "/^    async def validate_credentials(self, credentials: Dict[str, Any]) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self, credentials: Dict[str, Any])", "scope": "BaseConnector", "scopeKind": "class"}, {"_type": "tag", "name": "version", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/connectors/base.py", "pattern": "/^    version: str = \"1.0.0\"$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "BaseConnector", "scopeKind": "class"}], "hash": "5c645f1d94a2e54dc89a92018fd9d492", "format-version": 4, "code-base-name": "connector_backend", "filename": "connector_backend/src/connectors/base.py", "fields": [{"name": "List[str] required_scopes", "scope": "BaseConnector", "scopeKind": "class", "description": "unavailable"}, {"name": "List[AuthType] supported_auth_types", "scope": "BaseConnector", "scopeKind": "class", "description": "unavailable"}, {"name": "List[ResourceType] supported_resources", "scope": "BaseConnector", "scopeKind": "class", "description": "unavailable"}, {"name": "bool supports_oauth", "scope": "BaseConnector", "scopeKind": "class", "description": "unavailable"}, {"name": "bool supports_webhooks", "scope": "BaseConnector", "scopeKind": "class", "description": "unavailable"}, {"name": "str version", "scope": "BaseConnector", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"27": ""}]}