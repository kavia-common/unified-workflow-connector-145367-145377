{"is_source_file": true, "format": "Python", "description": "Source code for a GitHub connector class providing OAuth, resource management, and search functionalities in a project integrating with GitHub's API.", "external_files": ["src.connectors.base", "src.models.schemas", "src.core.exceptions", "src.core.config", "httpx"], "external_methods": ["BaseConnector.__init__", "settings.GITHUB_CLIENT_ID", "settings.GITHUB_CLIENT_SECRET", "urlencode"], "published": ["GitHubConnector"], "classes": [{"name": "GitHubConnector", "description": "A connector class facilitating OAuth, resource access, creation, and search operations with GitHub, extending BaseConnector."}], "methods": [{"name": "str get_oauth_authorize_url( self, tenant_id: str, state: str, redirect_uri: str )", "description": "Constructs the GitHub OAuth authorization URL with specified tenant, state, and redirect URI.", "scope": "GitHubConnector", "scopeKind": "class"}, {"name": "Dict[str,Any] exchange_code_for_tokens( self, tenant_id: str, code: str, state: str, redirect_uri: str )", "description": "Exchanges an OAuth code for access tokens via GitHub OAuth endpoint.", "scope": "GitHubConnector", "scopeKind": "class"}, {"name": "Dict[str,Any] refresh_access_token( self, tenant_id: str, refresh_token: str )", "description": "Indicates GitHub does not support token refresh; tokens are long-lived.", "scope": "GitHubConnector", "scopeKind": "class"}, {"name": "bool validate_credentials(self, credentials: Dict[str, Any])", "description": "Validates user credentials by calling GitHub's user API.", "scope": "GitHubConnector", "scopeKind": "class"}, {"name": "Tuple[List[SearchResult],int] search( self, credentials: Dict[str, Any], query: str, resource_type: Optional[ResourceType] = None, filters: Optional[Dict[str, Any]] = None, page: int = 1, per_page: int = 20 )", "description": "Performs a search over repositories or issues based on supplied query and filters.", "scope": "GitHubConnector", "scopeKind": "class"}, {"name": "Optional[Dict[str,Any]] get_resource( self, credentials: Dict[str, Any], resource_type: ResourceType, resource_id: str )", "description": "Retrieves a specific resource (repository or issue) by ID.", "scope": "GitHubConnector", "scopeKind": "class"}, {"name": "Dict[str,Any] create_resource( self, credentials: Dict[str, Any], resource_type: ResourceType, data: Dict[str, Any] )", "description": "Creates a new repository or issue on GitHub, based on input data.", "scope": "GitHubConnector", "scopeKind": "class"}, {"name": "Dict[str,str] _get_auth_headers(self, credentials: Dict[str, Any])", "description": "Generates authorization headers using provided credentials.", "scope": "GitHubConnector", "scopeKind": "class"}, {"name": "Tuple[List[SearchResult],int] _search_repositories( self, credentials: Dict[str, Any], query: str, filters: Optional[Dict[str, Any]], page: int, per_page: int )", "description": "Performs a search query specifically for repositories.", "scope": "GitHubConnector", "scopeKind": "class"}, {"name": "Tuple[List[SearchResult],int] _search_issues( self, credentials: Dict[str, Any], query: str, filters: Optional[Dict[str, Any]], page: int, per_page: int )", "description": "Performs a search query specifically for issues.", "scope": "GitHubConnector", "scopeKind": "class"}, {"name": "__init__(self, config: ConnectorConfig)", "scope": "GitHubConnector", "scopeKind": "class", "description": "unavailable"}], "calls": ["httpx.AsyncClient.post", "httpx.AsyncClient.get", "self._get_auth_headers", "response.raise_for_status", "settings.GITHUB_CLIENT_ID", "settings.GITHUB_CLIENT_SECRET"], "search-terms": ["GitHubOAuth", "searchRepositories", "searchIssues", "Resource Management", "OAuth2"], "state": 2, "file_id": 23, "knowledge_revision": 61, "git_revision": "", "ctags": [{"_type": "tag", "name": "GitHubConnector", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/connectors/github/connector.py", "pattern": "/^class GitHubConnector(BaseConnector):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/connectors/github/connector.py", "pattern": "/^    def __init__(self, config: ConnectorConfig):$/", "language": "Python", "kind": "member", "signature": "(self, config: ConnectorConfig)", "scope": "GitHubConnector", "scopeKind": "class"}, {"_type": "tag", "name": "_get_auth_headers", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/connectors/github/connector.py", "pattern": "/^    async def _get_auth_headers(self, credentials: Dict[str, Any]) -> Dict[str, str]:$/", "language": "Python", "typeref": "typename:Dict[str,str]", "kind": "member", "signature": "(self, credentials: Dict[str, Any])", "scope": "GitHubConnector", "scopeKind": "class"}, {"_type": "tag", "name": "_search_issues", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/connectors/github/connector.py", "pattern": "/^    async def _search_issues($/", "language": "Python", "typeref": "typename:Tuple[List[SearchResult],int]", "kind": "member", "signature": "( self, credentials: Dict[str, Any], query: str, filters: Optional[Dict[str, Any]], page: int, per_page: int )", "scope": "GitHubConnector", "scopeKind": "class"}, {"_type": "tag", "name": "_search_repositories", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/connectors/github/connector.py", "pattern": "/^    async def _search_repositories($/", "language": "Python", "typeref": "typename:Tuple[List[SearchResult],int]", "kind": "member", "signature": "( self, credentials: Dict[str, Any], query: str, filters: Optional[Dict[str, Any]], page: int, per_page: int )", "scope": "GitHubConnector", "scopeKind": "class"}, {"_type": "tag", "name": "connector_type", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/connectors/github/connector.py", "pattern": "/^    connector_type = \"version_control\"$/", "language": "Python", "kind": "variable", "scope": "GitHubConnector", "scopeKind": "class"}, {"_type": "tag", "name": "create_resource", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/connectors/github/connector.py", "pattern": "/^    async def create_resource($/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "( self, credentials: Dict[str, Any], resource_type: ResourceType, data: Dict[str, Any] )", "scope": "GitHubConnector", "scopeKind": "class"}, {"_type": "tag", "name": "display_name", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/connectors/github/connector.py", "pattern": "/^    display_name = \"GitHub\"$/", "language": "Python", "kind": "variable", "scope": "GitHubConnector", "scopeKind": "class"}, {"_type": "tag", "name": "exchange_code_for_tokens", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/connectors/github/connector.py", "pattern": "/^    async def exchange_code_for_tokens($/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "( self, tenant_id: str, code: str, state: str, redirect_uri: str )", "scope": "GitHubConnector", "scopeKind": "class"}, {"_type": "tag", "name": "get_oauth_authorize_url", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/connectors/github/connector.py", "pattern": "/^    async def get_oauth_authorize_url($/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "( self, tenant_id: str, state: str, redirect_uri: str )", "scope": "GitHubConnector", "scopeKind": "class"}, {"_type": "tag", "name": "get_resource", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/connectors/github/connector.py", "pattern": "/^    async def get_resource($/", "language": "Python", "typeref": "typename:Optional[Dict[str,Any]]", "kind": "member", "signature": "( self, credentials: Dict[str, Any], resource_type: ResourceType, resource_id: str )", "scope": "GitHubConnector", "scopeKind": "class"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/connectors/github/connector.py", "pattern": "/^    id = \"github\"$/", "language": "Python", "kind": "variable", "scope": "GitHubConnector", "scopeKind": "class"}, {"_type": "tag", "name": "refresh_access_token", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/connectors/github/connector.py", "pattern": "/^    async def refresh_access_token($/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "( self, tenant_id: str, refresh_token: str )", "scope": "GitHubConnector", "scopeKind": "class"}, {"_type": "tag", "name": "required_scopes", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/connectors/github/connector.py", "pattern": "/^    required_scopes = [\"repo\", \"read:user\"]$/", "language": "Python", "kind": "variable", "scope": "GitHubConnector", "scopeKind": "class"}, {"_type": "tag", "name": "search", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/connectors/github/connector.py", "pattern": "/^    async def search($/", "language": "Python", "typeref": "typename:Tuple[List[SearchResult],int]", "kind": "member", "signature": "( self, credentials: Dict[str, Any], query: str, resource_type: Optional[ResourceType] = None, filters: Optional[Dict[str, Any]] = None, page: int = 1, per_page: int = 20 )", "scope": "GitHubConnector", "scopeKind": "class"}, {"_type": "tag", "name": "supported_auth_types", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/connectors/github/connector.py", "pattern": "/^    supported_auth_types = [AuthType.OAUTH2]$/", "language": "Python", "kind": "variable", "scope": "GitHubConnector", "scopeKind": "class"}, {"_type": "tag", "name": "supported_resources", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/connectors/github/connector.py", "pattern": "/^    supported_resources = [ResourceType.REPOSITORY, ResourceType.ISSUE]$/", "language": "Python", "kind": "variable", "scope": "GitHubConnector", "scopeKind": "class"}, {"_type": "tag", "name": "supports_oauth", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/connectors/github/connector.py", "pattern": "/^    supports_oauth = True$/", "language": "Python", "kind": "variable", "scope": "GitHubConnector", "scopeKind": "class"}, {"_type": "tag", "name": "supports_webhooks", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/connectors/github/connector.py", "pattern": "/^    supports_webhooks = True$/", "language": "Python", "kind": "variable", "scope": "GitHubConnector", "scopeKind": "class"}, {"_type": "tag", "name": "validate_credentials", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/connectors/github/connector.py", "pattern": "/^    async def validate_credentials(self, credentials: Dict[str, Any]) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self, credentials: Dict[str, Any])", "scope": "GitHubConnector", "scopeKind": "class"}, {"_type": "tag", "name": "version", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/connectors/github/connector.py", "pattern": "/^    version = \"1.0.0\"$/", "language": "Python", "kind": "variable", "scope": "GitHubConnector", "scopeKind": "class"}], "hash": "f576d2f6e8af7828267e123a5dedda2e", "format-version": 4, "code-base-name": "connector_backend", "filename": "connector_backend/src/connectors/github/connector.py", "fields": [{"name": "connector_type = \"version_control\"", "scope": "GitHubConnector", "scopeKind": "class", "description": "unavailable"}, {"name": "display_name = \"GitHub\"", "scope": "GitHubConnector", "scopeKind": "class", "description": "unavailable"}, {"name": "id = \"github\"", "scope": "GitHubConnector", "scopeKind": "class", "description": "unavailable"}, {"name": "required_scopes = [\"repo\", \"read:user\"]", "scope": "GitHubConnector", "scopeKind": "class", "description": "unavailable"}, {"name": "supported_auth_types = [AuthType.OAUTH2]", "scope": "GitHubConnector", "scopeKind": "class", "description": "unavailable"}, {"name": "supported_resources = [ResourceType.REPOSITORY, ResourceType.ISSUE]", "scope": "GitHubConnector", "scopeKind": "class", "description": "unavailable"}, {"name": "supports_oauth = True", "scope": "GitHubConnector", "scopeKind": "class", "description": "unavailable"}, {"name": "supports_webhooks = True", "scope": "GitHubConnector", "scopeKind": "class", "description": "unavailable"}, {"name": "version = \"1.0.0\"", "scope": "GitHubConnector", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"61": ""}]}