{"is_source_file": true, "format": "Python", "description": "This file defines a DatabaseManager class for managing MongoDB connections asynchronously, including connection setup, disconnection, and index creation. It also provides module-level functions to initialize, retrieve, and close the database connection, tailored for a backend application.", "external_files": ["src/core/config.py", "motor.motor_asyncio", "pymongo.errors", "loguru"], "external_methods": ["settings.MONGODB_URL", "settings.MONGODB_DB_NAME", "logger.info", "logger.error", "asyncio", "AsyncIOMotorClient()", "AsyncIOMotorDatabase.create_index()", "client.admin.command", "client.close()"], "published": ["init_db", "get_database", "close_db"], "classes": [{"name": "DatabaseManager", "description": "Manages connection lifecycle to a MongoDB database, including establishing connections, disconnecting, and creating database indexes."}], "methods": [{"name": "__init__(self)", "description": "Initializes the DatabaseManager instance with empty client and database attributes.", "scope": "DatabaseManager", "scopeKind": "class"}, {"name": "None connect(self)", "description": "Connects to MongoDB using parameters from settings and tests the connection with a ping command.", "scope": "DatabaseManager", "scopeKind": "class"}, {"name": "None disconnect(self)", "description": "Closes the MongoDB client connection if it exists.", "scope": "DatabaseManager", "scopeKind": "class"}, {"name": "None create_indexes(self)", "description": "Creates multiple indexes on various collections in the database for efficient querying.", "scope": "DatabaseManager", "scopeKind": "class"}, {"name": "None close_db()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "AsyncIOMotorDatabase get_database()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "None init_db()", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["settings.MONGODB_URL", "settings.MONGODB_DB_NAME", "AsyncIOMotorClient", "self.client.admin.command", "self.database.connectors.create_index", "self.database.workflows.create_index", "self.database.webhook_events.create_index", "self.database.audit_logs.create_index", "self.database.metrics.create_index", "logger.info", "logger.error"], "search-terms": ["MongoDB", "async connection", "index creation", "database connection manager", "webhook events", "audit logs", "motor", "pymongo.errors", "loguru"], "state": 2, "file_id": 7, "knowledge_revision": 21, "git_revision": "", "revision_history": [{"15": ""}, {"21": ""}], "ctags": [{"_type": "tag", "name": "DatabaseManager", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/core/database.py", "pattern": "/^class DatabaseManager:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/core/database.py", "pattern": "/^    def __init__(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "DatabaseManager", "scopeKind": "class"}, {"_type": "tag", "name": "close_db", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/core/database.py", "pattern": "/^async def close_db() -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "connect", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/core/database.py", "pattern": "/^    async def connect(self) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self)", "scope": "DatabaseManager", "scopeKind": "class"}, {"_type": "tag", "name": "create_indexes", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/core/database.py", "pattern": "/^    async def create_indexes(self) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self)", "scope": "DatabaseManager", "scopeKind": "class"}, {"_type": "tag", "name": "db_manager", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/core/database.py", "pattern": "/^db_manager = DatabaseManager()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "disconnect", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/core/database.py", "pattern": "/^    async def disconnect(self) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self)", "scope": "DatabaseManager", "scopeKind": "class"}, {"_type": "tag", "name": "get_database", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/core/database.py", "pattern": "/^async def get_database() -> AsyncIOMotorDatabase:$/", "language": "Python", "typeref": "typename:AsyncIOMotorDatabase", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "init_db", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/core/database.py", "pattern": "/^async def init_db() -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "()"}], "hash": "761d4441d8c6ce4d89ca74e67516d3e3", "format-version": 4, "code-base-name": "connector_backend", "filename": "connector_backend/src/core/database.py", "fields": [{"name": "db_manager = DatabaseManager()", "scope": "", "scopeKind": "", "description": "unavailable"}]}