{"is_source_file": true, "format": "Python", "description": "This file defines custom exception classes for connector-related errors in a FastAPI application and sets up global exception handlers for various exception types, including custom connector exceptions, HTTP exceptions, validation errors, and general exceptions.", "external_files": ["fastapi", "starlette.exceptions", "pydantic", "loguru"], "external_methods": ["fastapi.FastAPI", "fastapi.Request", "fastapi.responses.JSONResponse", "fastapi.exceptions.RequestValidationError", "starlette.exceptions.HTTPException", "pydantic.ValidationError", "loguru.logger", "traceback.format_exc"], "published": ["setup_exception_handlers"], "classes": [{"name": "ConnectorException", "description": "Base exception for connector-related errors"}, {"name": "AuthenticationException", "description": "Exception for authentication-related errors"}, {"name": "AuthorizationException", "description": "Exception for authorization-related errors"}, {"name": "ConnectorNotFoundException", "description": "Exception when a connector is not found"}, {"name": "ConnectorConfigurationException", "description": "Exception for connector configuration errors"}, {"name": "TokenExpiredException", "description": "Exception when OAuth token is expired"}, {"name": "RateLimitException", "description": "Exception when rate limit is exceeded"}, {"name": "WorkflowException", "description": "Exception for workflow-related errors"}, {"name": "ValidationException", "description": "Exception for validation errors"}, {"name": "ExternalServiceException", "description": "Exception for external service integration errors"}], "methods": [{"name": "None setup_exception_handlers(app: FastAPI)", "description": "Sets up global exception handlers for the provided FastAPI app instance", "scope": "", "scopeKind": ""}, {"name": "__init__(self, connector_id: str)", "scope": "TokenExpiredException", "scopeKind": "class", "description": "unavailable"}, {"name": "__init__(self, message: str = \"Access denied\", details: dict = None)", "scope": "AuthorizationException", "scopeKind": "class", "description": "unavailable"}, {"name": "__init__(self, message: str = \"Authentication failed\", details: dict = None)", "scope": "AuthenticationException", "scopeKind": "class", "description": "unavailable"}, {"name": "__init__(self, message: str, code: str = \"CONNECTOR_ERROR\", details: dict = None)", "scope": "ConnectorException", "scopeKind": "class", "description": "unavailable"}, {"name": "__init__(self, message: str, connector_id: str = None)", "scope": "ConnectorConfigurationException", "scopeKind": "class", "description": "unavailable"}, {"name": "__init__(self, message: str, field: str = None)", "scope": "ValidationException", "scopeKind": "class", "description": "unavailable"}, {"name": "__init__(self, message: str, service: str, status_code: int = None)", "scope": "ExternalServiceException", "scopeKind": "class", "description": "unavailable"}, {"name": "__init__(self, message: str, workflow_id: str = None)", "scope": "WorkflowException", "scopeKind": "class", "description": "unavailable"}, {"name": "__init__(self, retry_after: int = None)", "scope": "RateLimitException", "scopeKind": "class", "description": "unavailable"}, {"name": "connector_exception_handler(request: Request, exc: ConnectorException)", "scope": "setup_exception_handlers", "scopeKind": "function", "description": "unavailable"}, {"name": "general_exception_handler(request: Request, exc: Exception)", "scope": "setup_exception_handlers", "scopeKind": "function", "description": "unavailable"}, {"name": "http_exception_handler(request: Request, exc: StarletteHTTPException)", "scope": "setup_exception_handlers", "scopeKind": "function", "description": "unavailable"}, {"name": "pydantic_validation_exception_handler(request: Request, exc: ValidationError)", "scope": "setup_exception_handlers", "scopeKind": "function", "description": "unavailable"}, {"name": "validation_exception_handler(request: Request, exc: RequestValidationError)", "scope": "setup_exception_handlers", "scopeKind": "function", "description": "unavailable"}], "calls": ["logger.error", "logger.warning", "logger.error", "logger.warning", "logger.warning", "logger.error"], "search-terms": ["ConnectorException", "setup_exception_handlers", "FastAPI exception handlers", "custom exceptions", "HTTPException handler", "validation errors", "rate limit"], "state": 2, "file_id": 9, "knowledge_revision": 34, "git_revision": "", "revision_history": [{"19": ""}, {"34": ""}], "ctags": [{"_type": "tag", "name": "AuthenticationException", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/core/exceptions.py", "pattern": "/^class AuthenticationException(ConnectorException):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "AuthorizationException", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/core/exceptions.py", "pattern": "/^class AuthorizationException(ConnectorException):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "ConnectorConfigurationException", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/core/exceptions.py", "pattern": "/^class ConnectorConfigurationException(ConnectorException):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "ConnectorException", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/core/exceptions.py", "pattern": "/^class ConnectorException(Exception):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "ConnectorNotFoundException", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/core/exceptions.py", "pattern": "/^class ConnectorNotFoundException(ConnectorException):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "ExternalServiceException", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/core/exceptions.py", "pattern": "/^class ExternalServiceException(ConnectorException):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "RateLimitException", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/core/exceptions.py", "pattern": "/^class RateLimitException(ConnectorException):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "StarletteHTTPException", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/core/exceptions.py", "pattern": "/^from starlette.exceptions import HTTPException as StarletteHTTPException$/", "language": "Python", "kind": "unknown", "nameref": "unknown:HTTPException"}, {"_type": "tag", "name": "TokenExpiredException", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/core/exceptions.py", "pattern": "/^class TokenExpiredException(ConnectorException):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "ValidationException", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/core/exceptions.py", "pattern": "/^class ValidationException(ConnectorException):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "WorkflowException", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/core/exceptions.py", "pattern": "/^class WorkflowException(ConnectorException):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/core/exceptions.py", "pattern": "/^    def __init__(self, connector_id: str):$/", "language": "Python", "kind": "member", "signature": "(self, connector_id: str)", "scope": "ConnectorNotFoundException", "scopeKind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/core/exceptions.py", "pattern": "/^    def __init__(self, connector_id: str):$/", "language": "Python", "kind": "member", "signature": "(self, connector_id: str)", "scope": "TokenExpiredException", "scopeKind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/core/exceptions.py", "pattern": "/^    def __init__(self, message: str = \"Access denied\", details: dict = None):$/", "language": "Python", "kind": "member", "signature": "(self, message: str = \"Access denied\", details: dict = None)", "scope": "AuthorizationException", "scopeKind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/core/exceptions.py", "pattern": "/^    def __init__(self, message: str = \"Authentication failed\", details: dict = None):$/", "language": "Python", "kind": "member", "signature": "(self, message: str = \"Authentication failed\", details: dict = None)", "scope": "AuthenticationException", "scopeKind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/core/exceptions.py", "pattern": "/^    def __init__(self, message: str, code: str = \"CONNECTOR_ERROR\", details: dict = None):$/", "language": "Python", "kind": "member", "signature": "(self, message: str, code: str = \"CONNECTOR_ERROR\", details: dict = None)", "scope": "ConnectorException", "scopeKind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/core/exceptions.py", "pattern": "/^    def __init__(self, message: str, connector_id: str = None):$/", "language": "Python", "kind": "member", "signature": "(self, message: str, connector_id: str = None)", "scope": "ConnectorConfigurationException", "scopeKind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/core/exceptions.py", "pattern": "/^    def __init__(self, message: str, field: str = None):$/", "language": "Python", "kind": "member", "signature": "(self, message: str, field: str = None)", "scope": "ValidationException", "scopeKind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/core/exceptions.py", "pattern": "/^    def __init__(self, message: str, service: str, status_code: int = None):$/", "language": "Python", "kind": "member", "signature": "(self, message: str, service: str, status_code: int = None)", "scope": "ExternalServiceException", "scopeKind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/core/exceptions.py", "pattern": "/^    def __init__(self, message: str, workflow_id: str = None):$/", "language": "Python", "kind": "member", "signature": "(self, message: str, workflow_id: str = None)", "scope": "WorkflowException", "scopeKind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/core/exceptions.py", "pattern": "/^    def __init__(self, retry_after: int = None):$/", "language": "Python", "kind": "member", "signature": "(self, retry_after: int = None)", "scope": "RateLimitException", "scopeKind": "class"}, {"_type": "tag", "name": "connector_exception_handler", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/core/exceptions.py", "pattern": "/^    async def connector_exception_handler(request: Request, exc: ConnectorException):$/", "file": true, "language": "Python", "kind": "function", "signature": "(request: Request, exc: ConnectorException)", "scope": "setup_exception_handlers", "scopeKind": "function"}, {"_type": "tag", "name": "general_exception_handler", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/core/exceptions.py", "pattern": "/^    async def general_exception_handler(request: Request, exc: Exception):$/", "file": true, "language": "Python", "kind": "function", "signature": "(request: Request, exc: Exception)", "scope": "setup_exception_handlers", "scopeKind": "function"}, {"_type": "tag", "name": "http_exception_handler", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/core/exceptions.py", "pattern": "/^    async def http_exception_handler(request: Request, exc: StarletteHTTPException):$/", "file": true, "language": "Python", "kind": "function", "signature": "(request: Request, exc: StarletteHTTPException)", "scope": "setup_exception_handlers", "scopeKind": "function"}, {"_type": "tag", "name": "pydantic_validation_exception_handler", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/core/exceptions.py", "pattern": "/^    async def pydantic_validation_exception_handler(request: Request, exc: ValidationError):$/", "file": true, "language": "Python", "kind": "function", "signature": "(request: Request, exc: ValidationError)", "scope": "setup_exception_handlers", "scopeKind": "function"}, {"_type": "tag", "name": "setup_exception_handlers", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/core/exceptions.py", "pattern": "/^def setup_exception_handlers(app: FastAPI) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "(app: FastAPI)"}, {"_type": "tag", "name": "validation_exception_handler", "path": "/home/kavia/workspace/code-generation/unified-workflow-connector-145367-145377/connector_backend/src/core/exceptions.py", "pattern": "/^    async def validation_exception_handler(request: Request, exc: RequestValidationError):$/", "file": true, "language": "Python", "kind": "function", "signature": "(request: Request, exc: RequestValidationError)", "scope": "setup_exception_handlers", "scopeKind": "function"}], "hash": "d303bafbefd6aa3ee4bb7f8e3c529ee4", "format-version": 4, "code-base-name": "connector_backend", "filename": "connector_backend/src/core/exceptions.py"}